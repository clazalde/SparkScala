[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 339.5133ms
[debug]       Load.loadUnit: defsScala took 0.7457ms
[debug] [Loading] Scanning directory C:\Users\Consultant\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Consultant\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 125.9395 ms
[debug]           Load.resolveProject(global-plugins) took 228.2928ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Consultant\.sbt\1.0\plugins, plugins: List(<none>))) took 646.0184ms
[debug] [Loading] Done in C:\Users\Consultant\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 764.6169ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.9988ms
[debug]     Load.loadUnit(file:/C:/Users/Consultant/.sbt/1.0/plugins/, ...) took 1141.3363ms
[debug]   Load.apply: load took 2204.1665ms
[debug]   Load.apply: resolveProjects took 18.5173ms
[debug]   Load.apply: finalTransforms took 333.9171ms
[debug]   Load.apply: config.delegates took 14.6874ms
[debug]   Load.apply: Def.make(settings)... took 1055.6521ms
[debug]   Load.apply: structureIndex took 328.2713ms
[debug]   Load.apply: mkStreams took 2.5242ms
[info] loading global plugins from C:\Users\Consultant\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9031.6747ms
[debug]           Load.loadUnit: plugins took 47.6793ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\Consultant\IdeaProjects\SparkScala\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Consultant\IdeaProjects\SparkScala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0702 ms
[debug]               Load.resolveProject(sparkscala-build) took 3.1323ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkscala-build, base: C:\Users\Consultant\IdeaProjects\SparkScala\project, plugins: List(<none>))) took 8.2016ms
[debug] [Loading] Done in C:\Users\Consultant\IdeaProjects\SparkScala\project, returning: (sparkscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 11.7042ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0195ms
[debug]         Load.loadUnit(file:/C:/Users/Consultant/IdeaProjects/SparkScala/project/, ...) took 60.8247ms
[debug]       Load.apply: load took 72.1628ms
[debug]       Load.apply: resolveProjects took 0.1829ms
[debug]       Load.apply: finalTransforms took 51.0989ms
[debug]       Load.apply: config.delegates took 2.1616ms
[debug]       Load.apply: Def.make(settings)... took 139.1111ms
[debug]       Load.apply: structureIndex took 72.7801ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Consultant\IdeaProjects\SparkScala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1218.5499ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\Consultant\IdeaProjects\SparkScala
[debug]       Load.loadUnit: mkEval took 8.6405ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9551 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.9175ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Consultant\IdeaProjects\SparkScala, plugins: List(<none>))) took 9.2635ms
[debug] [Loading] Done in C:\Users\Consultant\IdeaProjects\SparkScala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4748.9479ms
[debug]     Load.loadUnit: cleanEvalClasses took 26.0083ms
[debug]   Load.loadUnit(file:/C:/Users/Consultant/IdeaProjects/SparkScala/, ...) took 5994.6837ms
[debug] Load.apply: load took 5998.4466ms
[debug] Load.apply: resolveProjects took 0.2729ms
[debug] Load.apply: finalTransforms took 38.6817ms
[debug] Load.apply: config.delegates took 0.5595ms
[debug] Load.apply: Def.make(settings)... took 201.7262ms
[debug] Load.apply: structureIndex took 37.7182ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to SparkScala (in build file:/C:/Users/Consultant/IdeaProjects/SparkScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-ddbf214b9b8d1732f4ab
[debug] Writing bsp connection file
[info] started sbt server
